package route

import (
	"{{ .ProjectNamespace }}/internal/config"
	"{{ .ProjectNamespace }}/internal/middleware"
	"github.com/go-chi/chi"
	"github.com/graphql-go/handler"
	"gitlab.com/wpetit/goweb/static"
)

// Mount applications routes
func Mount(conf *config.Config, r *chi.Mux) error {

	schema, err := createGraphQLSchema()
	if err != nil {
		return err
	}

	h := handler.New(&handler.Config{
		Schema:   schema,
		Pretty:   true,
		GraphiQL: conf.Env != "prod",
	})

	r.Post("/graphql", middleware.GraphQLHTTP(h))
	r.Get("/graphql", middleware.GraphQLHTTP(h))

	notFoundHandler := r.NotFoundHandler()
	r.Get("/*", static.Dir(conf.HTTP.PublicDir, "", notFoundHandler))

	return nil
}
